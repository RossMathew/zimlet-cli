{"version":3,"sources":["../src/entry.js"],"names":["init","zimlet","zimbra","context","config","plugins","h","createElement","cloneElement","Component","components","global","preact","ZIMLET_STYLES","entry","require","r","default","instance","styles","set","join","process","env","NODE_ENV","module","hot","accept"],"mappings":";;AAAA;;;AAGA,CAAE,YAAM;AACP,UAASA,IAAT,GAAgB;AACfC,SAAQ,mBAAW;AAAA,OACZC,MADY,GACuEC,OADvE,CACZD,MADY;AAAA,OACJE,MADI,GACuED,OADvE,CACJC,MADI;AAAA,OACIC,OADJ,GACuEF,OADvE,CACIE,OADJ;AAAA,OACaC,CADb,GACuEH,OADvE,CACaG,CADb;AAAA,OACgBC,aADhB,GACuEJ,OADvE,CACgBI,aADhB;AAAA,OAC+BC,YAD/B,GACuEL,OADvE,CAC+BK,YAD/B;AAAA,OAC6CC,SAD7C,GACuEN,OADvE,CAC6CM,SAD7C;AAAA,OACwDC,UADxD,GACuEP,OADvE,CACwDO,UADxD;;AAElBC,UAAOC,MAAP,GAAgB,EAAEN,IAAF,EAAKC,4BAAL,EAAoBC,0BAApB,EAAkCC,oBAAlC,EAAhB;AACAE,UAAOT,MAAP,GAAgBA,MAAhB;AACAS,UAAOP,MAAP,GAAgBA,MAAhB;AACAO,UAAON,OAAP,GAAiBA,OAAjB;AACAM,UAAOD,UAAP,GAAoBA,UAApB;;AAEAC,UAAOE,aAAP,GAAuB,EAAvB;;AAEA,OAAIC,QAAQC,QAAQ,uBAAR,CAAZ;AACA,OAAIC,IAAIF,SAASA,MAAMG,OAAf,IAA0BH,KAAlC;;AAEA;AACA,OAAII,WAAW,OAAOF,CAAP,KAAW,UAAX,GAAwBA,EAAEb,OAAF,CAAxB,GAAqCa,CAApD;;AAEAb,WAAQgB,MAAR,CAAeC,GAAf,CAAmBT,OAAOE,aAAP,CAAqBQ,IAArB,CAA0B,IAA1B,CAAnB;;AAEA,UAAOH,QAAP;AACA,GAnBD;AAoBA;;AAEDlB;;AAEA,KAAIsB,QAAQC,GAAR,CAAYC,QAAZ,KAAuB,aAAvB,IAAwCC,OAAOC,GAAnD,EAAwD;AACvDD,SAAOC,GAAP,CAAWC,MAAX,CAAkB,uBAAlB,EAA2C3B,IAA3C;AACA;AACD,CA7BD","file":"entry.js","sourcesContent":["/** This is the real webpack entry file. It manages setting up the zimlet and HMR.\n *  The user-defined entry file (index.js) is imported here via a `zimlet-cli-entrypoint` alias.\n */\n( () => {\n\tfunction init() {\n\t\tzimlet( context => {\n\t\t\tlet { zimbra, config, plugins, h, createElement, cloneElement, Component, components } = context;\n\t\t\tglobal.preact = { h, createElement, cloneElement, Component };\n\t\t\tglobal.zimbra = zimbra;\n\t\t\tglobal.config = config;\n\t\t\tglobal.plugins = plugins;\n\t\t\tglobal.components = components;\n\n\t\t\tglobal.ZIMLET_STYLES = [];\n\n\t\t\tlet entry = require('zimlet-cli-entrypoint');\n\t\t\tlet r = entry && entry.default || entry;\n\n\t\t\t// If export is a factory, pass it context. Otherwise it's a singleton.\n\t\t\tlet instance = typeof r==='function' ? r(context) : r;\n\n\t\t\tcontext.styles.set(global.ZIMLET_STYLES.join('\\n'));\n\n\t\t\treturn instance;\n\t\t});\n\t}\n\n\tinit();\n\n\tif (process.env.NODE_ENV==='development' && module.hot) {\n\t\tmodule.hot.accept('zimlet-cli-entrypoint', init);\n\t}\n})();\n"]}